                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module LCD1602
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _delayOneMillisecond
                                     12 	.globl _CP_RL2
                                     13 	.globl _C_T2
                                     14 	.globl _TR2
                                     15 	.globl _EXEN2
                                     16 	.globl _TCLK
                                     17 	.globl _RCLK
                                     18 	.globl _EXF2
                                     19 	.globl _TF2
                                     20 	.globl _T2
                                     21 	.globl _T2EX
                                     22 	.globl _RI
                                     23 	.globl _TI
                                     24 	.globl _RB8
                                     25 	.globl _TB8
                                     26 	.globl _REN
                                     27 	.globl _SM2
                                     28 	.globl _SM1
                                     29 	.globl _SM0
                                     30 	.globl _RXD
                                     31 	.globl _TXD
                                     32 	.globl _INT0
                                     33 	.globl _INT1
                                     34 	.globl _T0
                                     35 	.globl _T1
                                     36 	.globl _WR
                                     37 	.globl _RD
                                     38 	.globl _PX0
                                     39 	.globl _PT0
                                     40 	.globl _PX1
                                     41 	.globl _PT1
                                     42 	.globl _PS
                                     43 	.globl _PT2
                                     44 	.globl _EX0
                                     45 	.globl _ET0
                                     46 	.globl _EX1
                                     47 	.globl _ET1
                                     48 	.globl _ES
                                     49 	.globl _ET2
                                     50 	.globl _EA
                                     51 	.globl _IT0
                                     52 	.globl _IE0
                                     53 	.globl _IT1
                                     54 	.globl _IE1
                                     55 	.globl _TR0
                                     56 	.globl _TF0
                                     57 	.globl _TR1
                                     58 	.globl _TF1
                                     59 	.globl _P
                                     60 	.globl _OV
                                     61 	.globl _RS0
                                     62 	.globl _RS1
                                     63 	.globl _F0
                                     64 	.globl _AC
                                     65 	.globl _CY
                                     66 	.globl _P37
                                     67 	.globl _P36
                                     68 	.globl _P35
                                     69 	.globl _P34
                                     70 	.globl _P33
                                     71 	.globl _P32
                                     72 	.globl _P31
                                     73 	.globl _P30
                                     74 	.globl _P27
                                     75 	.globl _P26
                                     76 	.globl _P25
                                     77 	.globl _P24
                                     78 	.globl _P23
                                     79 	.globl _P22
                                     80 	.globl _P21
                                     81 	.globl _P20
                                     82 	.globl _P17
                                     83 	.globl _P16
                                     84 	.globl _P15
                                     85 	.globl _P14
                                     86 	.globl _P13
                                     87 	.globl _P12
                                     88 	.globl _P11
                                     89 	.globl _P10
                                     90 	.globl _P07
                                     91 	.globl _P06
                                     92 	.globl _P05
                                     93 	.globl _P04
                                     94 	.globl _P03
                                     95 	.globl _P02
                                     96 	.globl _P01
                                     97 	.globl _P00
                                     98 	.globl _TH2
                                     99 	.globl _TL2
                                    100 	.globl _RCAP2H
                                    101 	.globl _RCAP2L
                                    102 	.globl _T2CON
                                    103 	.globl _SBUF
                                    104 	.globl _SCON
                                    105 	.globl _IP
                                    106 	.globl _IE
                                    107 	.globl _TH1
                                    108 	.globl _TH0
                                    109 	.globl _TL1
                                    110 	.globl _TL0
                                    111 	.globl _TMOD
                                    112 	.globl _TCON
                                    113 	.globl _PCON
                                    114 	.globl _DPH
                                    115 	.globl _DPL
                                    116 	.globl _SP
                                    117 	.globl _B
                                    118 	.globl _ACC
                                    119 	.globl _PSW
                                    120 	.globl _P3
                                    121 	.globl _P2
                                    122 	.globl _P1
                                    123 	.globl _P0
                                    124 	.globl _putStringOnLCD1602_PARM_3
                                    125 	.globl _putStringOnLCD1602_PARM_2
                                    126 	.globl _writeCharOnLCD1602_PARM_3
                                    127 	.globl _writeCharOnLCD1602_PARM_2
                                    128 	.globl ___writeComOnLCD1602
                                    129 	.globl ___writeDataOnLCD1602
                                    130 	.globl _initializeLCD1602
                                    131 	.globl _clearLineInLCD1602
                                    132 	.globl _writeCharOnLCD1602
                                    133 	.globl _putStringOnLCD1602
                                    134 ;--------------------------------------------------------
                                    135 ; special function registers
                                    136 ;--------------------------------------------------------
                                    137 	.area RSEG    (ABS,DATA)
      000000                        138 	.org 0x0000
                           000080   139 _P0	=	0x0080
                           000090   140 _P1	=	0x0090
                           0000A0   141 _P2	=	0x00a0
                           0000B0   142 _P3	=	0x00b0
                           0000D0   143 _PSW	=	0x00d0
                           0000E0   144 _ACC	=	0x00e0
                           0000F0   145 _B	=	0x00f0
                           000081   146 _SP	=	0x0081
                           000082   147 _DPL	=	0x0082
                           000083   148 _DPH	=	0x0083
                           000087   149 _PCON	=	0x0087
                           000088   150 _TCON	=	0x0088
                           000089   151 _TMOD	=	0x0089
                           00008A   152 _TL0	=	0x008a
                           00008B   153 _TL1	=	0x008b
                           00008C   154 _TH0	=	0x008c
                           00008D   155 _TH1	=	0x008d
                           0000A8   156 _IE	=	0x00a8
                           0000B8   157 _IP	=	0x00b8
                           000098   158 _SCON	=	0x0098
                           000099   159 _SBUF	=	0x0099
                           0000C8   160 _T2CON	=	0x00c8
                           0000CA   161 _RCAP2L	=	0x00ca
                           0000CB   162 _RCAP2H	=	0x00cb
                           0000CC   163 _TL2	=	0x00cc
                           0000CD   164 _TH2	=	0x00cd
                                    165 ;--------------------------------------------------------
                                    166 ; special function bits
                                    167 ;--------------------------------------------------------
                                    168 	.area RSEG    (ABS,DATA)
      000000                        169 	.org 0x0000
                           000080   170 _P00	=	0x0080
                           000081   171 _P01	=	0x0081
                           000082   172 _P02	=	0x0082
                           000083   173 _P03	=	0x0083
                           000084   174 _P04	=	0x0084
                           000085   175 _P05	=	0x0085
                           000086   176 _P06	=	0x0086
                           000087   177 _P07	=	0x0087
                           000090   178 _P10	=	0x0090
                           000091   179 _P11	=	0x0091
                           000092   180 _P12	=	0x0092
                           000093   181 _P13	=	0x0093
                           000094   182 _P14	=	0x0094
                           000095   183 _P15	=	0x0095
                           000096   184 _P16	=	0x0096
                           000097   185 _P17	=	0x0097
                           0000A0   186 _P20	=	0x00a0
                           0000A1   187 _P21	=	0x00a1
                           0000A2   188 _P22	=	0x00a2
                           0000A3   189 _P23	=	0x00a3
                           0000A4   190 _P24	=	0x00a4
                           0000A5   191 _P25	=	0x00a5
                           0000A6   192 _P26	=	0x00a6
                           0000A7   193 _P27	=	0x00a7
                           0000B0   194 _P30	=	0x00b0
                           0000B1   195 _P31	=	0x00b1
                           0000B2   196 _P32	=	0x00b2
                           0000B3   197 _P33	=	0x00b3
                           0000B4   198 _P34	=	0x00b4
                           0000B5   199 _P35	=	0x00b5
                           0000B6   200 _P36	=	0x00b6
                           0000B7   201 _P37	=	0x00b7
                           0000D7   202 _CY	=	0x00d7
                           0000D6   203 _AC	=	0x00d6
                           0000D5   204 _F0	=	0x00d5
                           0000D4   205 _RS1	=	0x00d4
                           0000D3   206 _RS0	=	0x00d3
                           0000D2   207 _OV	=	0x00d2
                           0000D0   208 _P	=	0x00d0
                           00008F   209 _TF1	=	0x008f
                           00008E   210 _TR1	=	0x008e
                           00008D   211 _TF0	=	0x008d
                           00008C   212 _TR0	=	0x008c
                           00008B   213 _IE1	=	0x008b
                           00008A   214 _IT1	=	0x008a
                           000089   215 _IE0	=	0x0089
                           000088   216 _IT0	=	0x0088
                           0000AF   217 _EA	=	0x00af
                           0000AD   218 _ET2	=	0x00ad
                           0000AC   219 _ES	=	0x00ac
                           0000AB   220 _ET1	=	0x00ab
                           0000AA   221 _EX1	=	0x00aa
                           0000A9   222 _ET0	=	0x00a9
                           0000A8   223 _EX0	=	0x00a8
                           0000BD   224 _PT2	=	0x00bd
                           0000BC   225 _PS	=	0x00bc
                           0000BB   226 _PT1	=	0x00bb
                           0000BA   227 _PX1	=	0x00ba
                           0000B9   228 _PT0	=	0x00b9
                           0000B8   229 _PX0	=	0x00b8
                           0000B7   230 _RD	=	0x00b7
                           0000B6   231 _WR	=	0x00b6
                           0000B5   232 _T1	=	0x00b5
                           0000B4   233 _T0	=	0x00b4
                           0000B3   234 _INT1	=	0x00b3
                           0000B2   235 _INT0	=	0x00b2
                           0000B1   236 _TXD	=	0x00b1
                           0000B0   237 _RXD	=	0x00b0
                           00009F   238 _SM0	=	0x009f
                           00009E   239 _SM1	=	0x009e
                           00009D   240 _SM2	=	0x009d
                           00009C   241 _REN	=	0x009c
                           00009B   242 _TB8	=	0x009b
                           00009A   243 _RB8	=	0x009a
                           000099   244 _TI	=	0x0099
                           000098   245 _RI	=	0x0098
                           000091   246 _T2EX	=	0x0091
                           000090   247 _T2	=	0x0090
                           0000CF   248 _TF2	=	0x00cf
                           0000CE   249 _EXF2	=	0x00ce
                           0000CD   250 _RCLK	=	0x00cd
                           0000CC   251 _TCLK	=	0x00cc
                           0000CB   252 _EXEN2	=	0x00cb
                           0000CA   253 _TR2	=	0x00ca
                           0000C9   254 _C_T2	=	0x00c9
                           0000C8   255 _CP_RL2	=	0x00c8
                                    256 ;--------------------------------------------------------
                                    257 ; overlayable register banks
                                    258 ;--------------------------------------------------------
                                    259 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        260 	.ds 8
                                    261 ;--------------------------------------------------------
                                    262 ; internal ram data
                                    263 ;--------------------------------------------------------
                                    264 	.area DSEG    (DATA)
      000000                        265 _writeCharOnLCD1602_PARM_2:
      000000                        266 	.ds 1
      000001                        267 _writeCharOnLCD1602_PARM_3:
      000001                        268 	.ds 1
      000002                        269 _putStringOnLCD1602_PARM_2:
      000002                        270 	.ds 1
      000003                        271 _putStringOnLCD1602_PARM_3:
      000003                        272 	.ds 3
                                    273 ;--------------------------------------------------------
                                    274 ; overlayable items in internal ram
                                    275 ;--------------------------------------------------------
                                    276 ;--------------------------------------------------------
                                    277 ; indirectly addressable internal ram data
                                    278 ;--------------------------------------------------------
                                    279 	.area ISEG    (DATA)
                                    280 ;--------------------------------------------------------
                                    281 ; absolute internal ram data
                                    282 ;--------------------------------------------------------
                                    283 	.area IABS    (ABS,DATA)
                                    284 	.area IABS    (ABS,DATA)
                                    285 ;--------------------------------------------------------
                                    286 ; bit data
                                    287 ;--------------------------------------------------------
                                    288 	.area BSEG    (BIT)
                                    289 ;--------------------------------------------------------
                                    290 ; paged external ram data
                                    291 ;--------------------------------------------------------
                                    292 	.area PSEG    (PAG,XDATA)
                                    293 ;--------------------------------------------------------
                                    294 ; external ram data
                                    295 ;--------------------------------------------------------
                                    296 	.area XSEG    (XDATA)
                                    297 ;--------------------------------------------------------
                                    298 ; absolute external ram data
                                    299 ;--------------------------------------------------------
                                    300 	.area XABS    (ABS,XDATA)
                                    301 ;--------------------------------------------------------
                                    302 ; external initialized ram data
                                    303 ;--------------------------------------------------------
                                    304 	.area XISEG   (XDATA)
                                    305 	.area HOME    (CODE)
                                    306 	.area GSINIT0 (CODE)
                                    307 	.area GSINIT1 (CODE)
                                    308 	.area GSINIT2 (CODE)
                                    309 	.area GSINIT3 (CODE)
                                    310 	.area GSINIT4 (CODE)
                                    311 	.area GSINIT5 (CODE)
                                    312 	.area GSINIT  (CODE)
                                    313 	.area GSFINAL (CODE)
                                    314 	.area CSEG    (CODE)
                                    315 ;--------------------------------------------------------
                                    316 ; global & static initialisations
                                    317 ;--------------------------------------------------------
                                    318 	.area HOME    (CODE)
                                    319 	.area GSINIT  (CODE)
                                    320 	.area GSFINAL (CODE)
                                    321 	.area GSINIT  (CODE)
                                    322 ;--------------------------------------------------------
                                    323 ; Home
                                    324 ;--------------------------------------------------------
                                    325 	.area HOME    (CODE)
                                    326 	.area HOME    (CODE)
                                    327 ;--------------------------------------------------------
                                    328 ; code
                                    329 ;--------------------------------------------------------
                                    330 	.area CSEG    (CODE)
                                    331 ;------------------------------------------------------------
                                    332 ;Allocation info for local variables in function '__writeComOnLCD1602'
                                    333 ;------------------------------------------------------------
                                    334 ;com                       Allocated to registers r7 
                                    335 ;------------------------------------------------------------
                                    336 ;	.\src\utils\LCD1602\LCD1602.c:4: void __writeComOnLCD1602(unsigned char com)	{	//写入命令
                                    337 ;	-----------------------------------------
                                    338 ;	 function __writeComOnLCD1602
                                    339 ;	-----------------------------------------
      000000                        340 ___writeComOnLCD1602:
                           000007   341 	ar7 = 0x07
                           000006   342 	ar6 = 0x06
                           000005   343 	ar5 = 0x05
                           000004   344 	ar4 = 0x04
                           000003   345 	ar3 = 0x03
                           000002   346 	ar2 = 0x02
                           000001   347 	ar1 = 0x01
                           000000   348 	ar0 = 0x00
      000000 AF 82            [24]  349 	mov	r7,dpl
                                    350 ;	.\src\utils\LCD1602\LCD1602.c:5: LCD1602_E = 0;	//使能
                                    351 ;	assignBit
      000002 C2 92            [12]  352 	clr	_P12
                                    353 ;	.\src\utils\LCD1602\LCD1602.c:6: LCD1602_RS = 0;	//选择发送命令
                                    354 ;	assignBit
      000004 C2 90            [12]  355 	clr	_P10
                                    356 ;	.\src\utils\LCD1602\LCD1602.c:7: LCD1602_RW = 0;	//选择写入
                                    357 ;	assignBit
      000006 C2 91            [12]  358 	clr	_P11
                                    359 ;	.\src\utils\LCD1602\LCD1602.c:9: LCD1602_DATAPINS = com;	//放入命令
      000008 8F 80            [24]  360 	mov	_P0,r7
                                    361 ;	.\src\utils\LCD1602\LCD1602.c:10: Lcd1602_Delay1ms(1);	//等待数据稳定
      00000A 90 00 01         [24]  362 	mov	dptr,#0x0001
      00000D 12r00r00         [24]  363 	lcall	_delayOneMillisecond
                                    364 ;	.\src\utils\LCD1602\LCD1602.c:12: LCD1602_E = 1;	//写入时序
                                    365 ;	assignBit
      000010 D2 92            [12]  366 	setb	_P12
                                    367 ;	.\src\utils\LCD1602\LCD1602.c:13: Lcd1602_Delay1ms(5);	//保持时间
      000012 90 00 05         [24]  368 	mov	dptr,#0x0005
      000015 12r00r00         [24]  369 	lcall	_delayOneMillisecond
                                    370 ;	.\src\utils\LCD1602\LCD1602.c:14: LCD1602_E = 0;
                                    371 ;	assignBit
      000018 C2 92            [12]  372 	clr	_P12
                                    373 ;	.\src\utils\LCD1602\LCD1602.c:15: }
      00001A 22               [24]  374 	ret
                                    375 ;------------------------------------------------------------
                                    376 ;Allocation info for local variables in function '__writeDataOnLCD1602'
                                    377 ;------------------------------------------------------------
                                    378 ;dat                       Allocated to registers r7 
                                    379 ;------------------------------------------------------------
                                    380 ;	.\src\utils\LCD1602\LCD1602.c:18: void __writeDataOnLCD1602(unsigned char dat) {	//写入数据
                                    381 ;	-----------------------------------------
                                    382 ;	 function __writeDataOnLCD1602
                                    383 ;	-----------------------------------------
      00001B                        384 ___writeDataOnLCD1602:
      00001B AF 82            [24]  385 	mov	r7,dpl
                                    386 ;	.\src\utils\LCD1602\LCD1602.c:19: LCD1602_E = 0;	//使能清零
                                    387 ;	assignBit
      00001D C2 92            [12]  388 	clr	_P12
                                    389 ;	.\src\utils\LCD1602\LCD1602.c:20: LCD1602_RS = 1;	//选择输入数据
                                    390 ;	assignBit
      00001F D2 90            [12]  391 	setb	_P10
                                    392 ;	.\src\utils\LCD1602\LCD1602.c:21: LCD1602_RW = 0;	//选择写入
                                    393 ;	assignBit
      000021 C2 91            [12]  394 	clr	_P11
                                    395 ;	.\src\utils\LCD1602\LCD1602.c:23: LCD1602_DATAPINS = dat;	//写入数据
      000023 8F 80            [24]  396 	mov	_P0,r7
                                    397 ;	.\src\utils\LCD1602\LCD1602.c:24: Lcd1602_Delay1ms(1);
      000025 90 00 01         [24]  398 	mov	dptr,#0x0001
      000028 12r00r00         [24]  399 	lcall	_delayOneMillisecond
                                    400 ;	.\src\utils\LCD1602\LCD1602.c:26: LCD1602_E = 1;	//写入时序
                                    401 ;	assignBit
      00002B D2 92            [12]  402 	setb	_P12
                                    403 ;	.\src\utils\LCD1602\LCD1602.c:27: Lcd1602_Delay1ms(5);	//保持时间
      00002D 90 00 05         [24]  404 	mov	dptr,#0x0005
      000030 12r00r00         [24]  405 	lcall	_delayOneMillisecond
                                    406 ;	.\src\utils\LCD1602\LCD1602.c:28: LCD1602_E = 0;
                                    407 ;	assignBit
      000033 C2 92            [12]  408 	clr	_P12
                                    409 ;	.\src\utils\LCD1602\LCD1602.c:29: }
      000035 22               [24]  410 	ret
                                    411 ;------------------------------------------------------------
                                    412 ;Allocation info for local variables in function 'initializeLCD1602'
                                    413 ;------------------------------------------------------------
                                    414 ;	.\src\utils\LCD1602\LCD1602.c:32: void initializeLCD1602(void) {	//LCD初始化子程序
                                    415 ;	-----------------------------------------
                                    416 ;	 function initializeLCD1602
                                    417 ;	-----------------------------------------
      000036                        418 _initializeLCD1602:
                                    419 ;	.\src\utils\LCD1602\LCD1602.c:33: __writeComOnLCD1602(0x38);	//开显示
      000036 75 82 38         [24]  420 	mov	dpl,#0x38
      000039 12r00r00         [24]  421 	lcall	___writeComOnLCD1602
                                    422 ;	.\src\utils\LCD1602\LCD1602.c:34: __writeComOnLCD1602(0x0c);	//开显示不显示光标
      00003C 75 82 0C         [24]  423 	mov	dpl,#0x0c
      00003F 12r00r00         [24]  424 	lcall	___writeComOnLCD1602
                                    425 ;	.\src\utils\LCD1602\LCD1602.c:35: __writeComOnLCD1602(0x06);	//写一个指针加1
      000042 75 82 06         [24]  426 	mov	dpl,#0x06
      000045 12r00r00         [24]  427 	lcall	___writeComOnLCD1602
                                    428 ;	.\src\utils\LCD1602\LCD1602.c:36: __writeComOnLCD1602(0x01);	//清屏
      000048 75 82 01         [24]  429 	mov	dpl,#0x01
      00004B 12r00r00         [24]  430 	lcall	___writeComOnLCD1602
                                    431 ;	.\src\utils\LCD1602\LCD1602.c:37: __writeComOnLCD1602(0x80);	//设置数据指针起点
      00004E 75 82 80         [24]  432 	mov	dpl,#0x80
                                    433 ;	.\src\utils\LCD1602\LCD1602.c:38: }
      000051 02r00r00         [24]  434 	ljmp	___writeComOnLCD1602
                                    435 ;------------------------------------------------------------
                                    436 ;Allocation info for local variables in function 'clearLineInLCD1602'
                                    437 ;------------------------------------------------------------
                                    438 ;row                       Allocated to registers r7 
                                    439 ;i                         Allocated to registers r7 
                                    440 ;------------------------------------------------------------
                                    441 ;	.\src\utils\LCD1602\LCD1602.c:41: void clearLineInLCD1602(unsigned char row) {
                                    442 ;	-----------------------------------------
                                    443 ;	 function clearLineInLCD1602
                                    444 ;	-----------------------------------------
      000054                        445 _clearLineInLCD1602:
                                    446 ;	.\src\utils\LCD1602\LCD1602.c:43: __writeComOnLCD1602(((row & 1) << 6) | 0x80);
      000054 E5 82            [12]  447 	mov	a,dpl
      000056 54 01            [12]  448 	anl	a,#0x01
      000058 03               [12]  449 	rr	a
      000059 03               [12]  450 	rr	a
      00005A 54 C0            [12]  451 	anl	a,#0xc0
      00005C FF               [12]  452 	mov	r7,a
      00005D 74 80            [12]  453 	mov	a,#0x80
      00005F 4F               [12]  454 	orl	a,r7
      000060 F5 82            [12]  455 	mov	dpl,a
      000062 12r00r00         [24]  456 	lcall	___writeComOnLCD1602
                                    457 ;	.\src\utils\LCD1602\LCD1602.c:44: for(i=0; i<LineLength; i++) __writeDataOnLCD1602(' ');
      000065 7F 00            [12]  458 	mov	r7,#0x00
      000067                        459 00102$:
      000067 75 82 20         [24]  460 	mov	dpl,#0x20
      00006A C0 07            [24]  461 	push	ar7
      00006C 12r00r1B         [24]  462 	lcall	___writeDataOnLCD1602
      00006F D0 07            [24]  463 	pop	ar7
      000071 0F               [12]  464 	inc	r7
      000072 BF 10 00         [24]  465 	cjne	r7,#0x10,00111$
      000075                        466 00111$:
      000075 40 F0            [24]  467 	jc	00102$
                                    468 ;	.\src\utils\LCD1602\LCD1602.c:45: }
      000077 22               [24]  469 	ret
                                    470 ;------------------------------------------------------------
                                    471 ;Allocation info for local variables in function 'writeCharOnLCD1602'
                                    472 ;------------------------------------------------------------
                                    473 ;column                    Allocated with name '_writeCharOnLCD1602_PARM_2'
                                    474 ;dat                       Allocated with name '_writeCharOnLCD1602_PARM_3'
                                    475 ;row                       Allocated to registers r7 
                                    476 ;------------------------------------------------------------
                                    477 ;	.\src\utils\LCD1602\LCD1602.c:49: void writeCharOnLCD1602(unsigned char row, unsigned char column, unsigned char dat) {
                                    478 ;	-----------------------------------------
                                    479 ;	 function writeCharOnLCD1602
                                    480 ;	-----------------------------------------
      000078                        481 _writeCharOnLCD1602:
                                    482 ;	.\src\utils\LCD1602\LCD1602.c:50: __writeComOnLCD1602((((row & 1) << 6) + column) | 0x80);
      000078 E5 82            [12]  483 	mov	a,dpl
      00007A 54 01            [12]  484 	anl	a,#0x01
      00007C 03               [12]  485 	rr	a
      00007D 03               [12]  486 	rr	a
      00007E 54 C0            [12]  487 	anl	a,#0xc0
      000080 FF               [12]  488 	mov	r7,a
      000081 E5*00            [12]  489 	mov	a,_writeCharOnLCD1602_PARM_2
      000083 2F               [12]  490 	add	a,r7
      000084 44 80            [12]  491 	orl	a,#0x80
      000086 F5 82            [12]  492 	mov	dpl,a
      000088 12r00r00         [24]  493 	lcall	___writeComOnLCD1602
                                    494 ;	.\src\utils\LCD1602\LCD1602.c:51: __writeDataOnLCD1602(dat);
      00008B 85*01 82         [24]  495 	mov	dpl,_writeCharOnLCD1602_PARM_3
                                    496 ;	.\src\utils\LCD1602\LCD1602.c:52: }
      00008E 02r00r1B         [24]  497 	ljmp	___writeDataOnLCD1602
                                    498 ;------------------------------------------------------------
                                    499 ;Allocation info for local variables in function 'putStringOnLCD1602'
                                    500 ;------------------------------------------------------------
                                    501 ;column                    Allocated with name '_putStringOnLCD1602_PARM_2'
                                    502 ;puts                      Allocated with name '_putStringOnLCD1602_PARM_3'
                                    503 ;row                       Allocated to registers r7 
                                    504 ;------------------------------------------------------------
                                    505 ;	.\src\utils\LCD1602\LCD1602.c:56: void putStringOnLCD1602(unsigned char row, unsigned char column, unsigned char *puts) {
                                    506 ;	-----------------------------------------
                                    507 ;	 function putStringOnLCD1602
                                    508 ;	-----------------------------------------
      000091                        509 _putStringOnLCD1602:
                                    510 ;	.\src\utils\LCD1602\LCD1602.c:57: __writeComOnLCD1602((((row & 1) << 6) + column) | 0x80);
      000091 E5 82            [12]  511 	mov	a,dpl
      000093 54 01            [12]  512 	anl	a,#0x01
      000095 03               [12]  513 	rr	a
      000096 03               [12]  514 	rr	a
      000097 54 C0            [12]  515 	anl	a,#0xc0
      000099 FF               [12]  516 	mov	r7,a
      00009A E5*02            [12]  517 	mov	a,_putStringOnLCD1602_PARM_2
      00009C 2F               [12]  518 	add	a,r7
      00009D 44 80            [12]  519 	orl	a,#0x80
      00009F F5 82            [12]  520 	mov	dpl,a
      0000A1 12r00r00         [24]  521 	lcall	___writeComOnLCD1602
      0000A4 AF*02            [24]  522 	mov	r7,_putStringOnLCD1602_PARM_2
      0000A6 AC*03            [24]  523 	mov	r4,_putStringOnLCD1602_PARM_3
      0000A8 AD*04            [24]  524 	mov	r5,(_putStringOnLCD1602_PARM_3 + 1)
      0000AA AE*05            [24]  525 	mov	r6,(_putStringOnLCD1602_PARM_3 + 2)
      0000AC                        526 00105$:
                                    527 ;	.\src\utils\LCD1602\LCD1602.c:58: for (; *puts != 0; puts++) {	//遇到停止符0结束
      0000AC 8C 82            [24]  528 	mov	dpl,r4
      0000AE 8D 83            [24]  529 	mov	dph,r5
      0000B0 8E F0            [24]  530 	mov	b,r6
      0000B2 12r00r00         [24]  531 	lcall	__gptrget
      0000B5 FB               [12]  532 	mov	r3,a
      0000B6 60 22            [24]  533 	jz	00107$
                                    534 ;	.\src\utils\LCD1602\LCD1602.c:59: __writeDataOnLCD1602(*puts);
      0000B8 8B 82            [24]  535 	mov	dpl,r3
      0000BA C0 07            [24]  536 	push	ar7
      0000BC C0 06            [24]  537 	push	ar6
      0000BE C0 05            [24]  538 	push	ar5
      0000C0 C0 04            [24]  539 	push	ar4
      0000C2 12r00r1B         [24]  540 	lcall	___writeDataOnLCD1602
      0000C5 D0 04            [24]  541 	pop	ar4
      0000C7 D0 05            [24]  542 	pop	ar5
      0000C9 D0 06            [24]  543 	pop	ar6
      0000CB D0 07            [24]  544 	pop	ar7
                                    545 ;	.\src\utils\LCD1602\LCD1602.c:60: if(++column >= LineLength) break;
      0000CD 0F               [12]  546 	inc	r7
      0000CE BF 10 00         [24]  547 	cjne	r7,#0x10,00123$
      0000D1                        548 00123$:
      0000D1 50 07            [24]  549 	jnc	00107$
                                    550 ;	.\src\utils\LCD1602\LCD1602.c:58: for (; *puts != 0; puts++) {	//遇到停止符0结束
      0000D3 0C               [12]  551 	inc	r4
      0000D4 BC 00 D5         [24]  552 	cjne	r4,#0x00,00105$
      0000D7 0D               [12]  553 	inc	r5
      0000D8 80 D2            [24]  554 	sjmp	00105$
      0000DA                        555 00107$:
                                    556 ;	.\src\utils\LCD1602\LCD1602.c:62: }
      0000DA 22               [24]  557 	ret
                                    558 	.area CSEG    (CODE)
                                    559 	.area CONST   (CODE)
                                    560 	.area XINIT   (CODE)
                                    561 	.area CABS    (ABS,CODE)
