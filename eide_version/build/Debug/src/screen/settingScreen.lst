                                      1 ;--------------------------------------------------------
                                      2 ; File Created by SDCC : free open source ANSI-C Compiler
                                      3 ; Version 4.2.0 #13081 (MINGW64)
                                      4 ;--------------------------------------------------------
                                      5 	.module settingScreen
                                      6 	.optsdcc -mmcs51 --model-small
                                      7 	
                                      8 ;--------------------------------------------------------
                                      9 ; Public variables in this module
                                     10 ;--------------------------------------------------------
                                     11 	.globl _settingScreen
                                     12 	.globl _alartScreen
                                     13 	.globl _floatToText
                                     14 	.globl _writeAT24C02
                                     15 	.globl _putStringOnLCD1602
                                     16 	.globl _delayOneMillisecond
                                     17 	.globl _CP_RL2
                                     18 	.globl _C_T2
                                     19 	.globl _TR2
                                     20 	.globl _EXEN2
                                     21 	.globl _TCLK
                                     22 	.globl _RCLK
                                     23 	.globl _EXF2
                                     24 	.globl _TF2
                                     25 	.globl _T2
                                     26 	.globl _T2EX
                                     27 	.globl _RI
                                     28 	.globl _TI
                                     29 	.globl _RB8
                                     30 	.globl _TB8
                                     31 	.globl _REN
                                     32 	.globl _SM2
                                     33 	.globl _SM1
                                     34 	.globl _SM0
                                     35 	.globl _RXD
                                     36 	.globl _TXD
                                     37 	.globl _INT0
                                     38 	.globl _INT1
                                     39 	.globl _T0
                                     40 	.globl _T1
                                     41 	.globl _WR
                                     42 	.globl _RD
                                     43 	.globl _PX0
                                     44 	.globl _PT0
                                     45 	.globl _PX1
                                     46 	.globl _PT1
                                     47 	.globl _PS
                                     48 	.globl _PT2
                                     49 	.globl _EX0
                                     50 	.globl _ET0
                                     51 	.globl _EX1
                                     52 	.globl _ET1
                                     53 	.globl _ES
                                     54 	.globl _ET2
                                     55 	.globl _EA
                                     56 	.globl _IT0
                                     57 	.globl _IE0
                                     58 	.globl _IT1
                                     59 	.globl _IE1
                                     60 	.globl _TR0
                                     61 	.globl _TF0
                                     62 	.globl _TR1
                                     63 	.globl _TF1
                                     64 	.globl _P
                                     65 	.globl _OV
                                     66 	.globl _RS0
                                     67 	.globl _RS1
                                     68 	.globl _F0
                                     69 	.globl _AC
                                     70 	.globl _CY
                                     71 	.globl _P37
                                     72 	.globl _P36
                                     73 	.globl _P35
                                     74 	.globl _P34
                                     75 	.globl _P33
                                     76 	.globl _P32
                                     77 	.globl _P31
                                     78 	.globl _P30
                                     79 	.globl _P27
                                     80 	.globl _P26
                                     81 	.globl _P25
                                     82 	.globl _P24
                                     83 	.globl _P23
                                     84 	.globl _P22
                                     85 	.globl _P21
                                     86 	.globl _P20
                                     87 	.globl _P17
                                     88 	.globl _P16
                                     89 	.globl _P15
                                     90 	.globl _P14
                                     91 	.globl _P13
                                     92 	.globl _P12
                                     93 	.globl _P11
                                     94 	.globl _P10
                                     95 	.globl _P07
                                     96 	.globl _P06
                                     97 	.globl _P05
                                     98 	.globl _P04
                                     99 	.globl _P03
                                    100 	.globl _P02
                                    101 	.globl _P01
                                    102 	.globl _P00
                                    103 	.globl _TH2
                                    104 	.globl _TL2
                                    105 	.globl _RCAP2H
                                    106 	.globl _RCAP2L
                                    107 	.globl _T2CON
                                    108 	.globl _SBUF
                                    109 	.globl _SCON
                                    110 	.globl _IP
                                    111 	.globl _IE
                                    112 	.globl _TH1
                                    113 	.globl _TH0
                                    114 	.globl _TL1
                                    115 	.globl _TL0
                                    116 	.globl _TMOD
                                    117 	.globl _TCON
                                    118 	.globl _PCON
                                    119 	.globl _DPH
                                    120 	.globl _DPL
                                    121 	.globl _SP
                                    122 	.globl _B
                                    123 	.globl _ACC
                                    124 	.globl _PSW
                                    125 	.globl _P3
                                    126 	.globl _P2
                                    127 	.globl _P1
                                    128 	.globl _P0
                                    129 ;--------------------------------------------------------
                                    130 ; special function registers
                                    131 ;--------------------------------------------------------
                                    132 	.area RSEG    (ABS,DATA)
      000000                        133 	.org 0x0000
                           000080   134 _P0	=	0x0080
                           000090   135 _P1	=	0x0090
                           0000A0   136 _P2	=	0x00a0
                           0000B0   137 _P3	=	0x00b0
                           0000D0   138 _PSW	=	0x00d0
                           0000E0   139 _ACC	=	0x00e0
                           0000F0   140 _B	=	0x00f0
                           000081   141 _SP	=	0x0081
                           000082   142 _DPL	=	0x0082
                           000083   143 _DPH	=	0x0083
                           000087   144 _PCON	=	0x0087
                           000088   145 _TCON	=	0x0088
                           000089   146 _TMOD	=	0x0089
                           00008A   147 _TL0	=	0x008a
                           00008B   148 _TL1	=	0x008b
                           00008C   149 _TH0	=	0x008c
                           00008D   150 _TH1	=	0x008d
                           0000A8   151 _IE	=	0x00a8
                           0000B8   152 _IP	=	0x00b8
                           000098   153 _SCON	=	0x0098
                           000099   154 _SBUF	=	0x0099
                           0000C8   155 _T2CON	=	0x00c8
                           0000CA   156 _RCAP2L	=	0x00ca
                           0000CB   157 _RCAP2H	=	0x00cb
                           0000CC   158 _TL2	=	0x00cc
                           0000CD   159 _TH2	=	0x00cd
                                    160 ;--------------------------------------------------------
                                    161 ; special function bits
                                    162 ;--------------------------------------------------------
                                    163 	.area RSEG    (ABS,DATA)
      000000                        164 	.org 0x0000
                           000080   165 _P00	=	0x0080
                           000081   166 _P01	=	0x0081
                           000082   167 _P02	=	0x0082
                           000083   168 _P03	=	0x0083
                           000084   169 _P04	=	0x0084
                           000085   170 _P05	=	0x0085
                           000086   171 _P06	=	0x0086
                           000087   172 _P07	=	0x0087
                           000090   173 _P10	=	0x0090
                           000091   174 _P11	=	0x0091
                           000092   175 _P12	=	0x0092
                           000093   176 _P13	=	0x0093
                           000094   177 _P14	=	0x0094
                           000095   178 _P15	=	0x0095
                           000096   179 _P16	=	0x0096
                           000097   180 _P17	=	0x0097
                           0000A0   181 _P20	=	0x00a0
                           0000A1   182 _P21	=	0x00a1
                           0000A2   183 _P22	=	0x00a2
                           0000A3   184 _P23	=	0x00a3
                           0000A4   185 _P24	=	0x00a4
                           0000A5   186 _P25	=	0x00a5
                           0000A6   187 _P26	=	0x00a6
                           0000A7   188 _P27	=	0x00a7
                           0000B0   189 _P30	=	0x00b0
                           0000B1   190 _P31	=	0x00b1
                           0000B2   191 _P32	=	0x00b2
                           0000B3   192 _P33	=	0x00b3
                           0000B4   193 _P34	=	0x00b4
                           0000B5   194 _P35	=	0x00b5
                           0000B6   195 _P36	=	0x00b6
                           0000B7   196 _P37	=	0x00b7
                           0000D7   197 _CY	=	0x00d7
                           0000D6   198 _AC	=	0x00d6
                           0000D5   199 _F0	=	0x00d5
                           0000D4   200 _RS1	=	0x00d4
                           0000D3   201 _RS0	=	0x00d3
                           0000D2   202 _OV	=	0x00d2
                           0000D0   203 _P	=	0x00d0
                           00008F   204 _TF1	=	0x008f
                           00008E   205 _TR1	=	0x008e
                           00008D   206 _TF0	=	0x008d
                           00008C   207 _TR0	=	0x008c
                           00008B   208 _IE1	=	0x008b
                           00008A   209 _IT1	=	0x008a
                           000089   210 _IE0	=	0x0089
                           000088   211 _IT0	=	0x0088
                           0000AF   212 _EA	=	0x00af
                           0000AD   213 _ET2	=	0x00ad
                           0000AC   214 _ES	=	0x00ac
                           0000AB   215 _ET1	=	0x00ab
                           0000AA   216 _EX1	=	0x00aa
                           0000A9   217 _ET0	=	0x00a9
                           0000A8   218 _EX0	=	0x00a8
                           0000BD   219 _PT2	=	0x00bd
                           0000BC   220 _PS	=	0x00bc
                           0000BB   221 _PT1	=	0x00bb
                           0000BA   222 _PX1	=	0x00ba
                           0000B9   223 _PT0	=	0x00b9
                           0000B8   224 _PX0	=	0x00b8
                           0000B7   225 _RD	=	0x00b7
                           0000B6   226 _WR	=	0x00b6
                           0000B5   227 _T1	=	0x00b5
                           0000B4   228 _T0	=	0x00b4
                           0000B3   229 _INT1	=	0x00b3
                           0000B2   230 _INT0	=	0x00b2
                           0000B1   231 _TXD	=	0x00b1
                           0000B0   232 _RXD	=	0x00b0
                           00009F   233 _SM0	=	0x009f
                           00009E   234 _SM1	=	0x009e
                           00009D   235 _SM2	=	0x009d
                           00009C   236 _REN	=	0x009c
                           00009B   237 _TB8	=	0x009b
                           00009A   238 _RB8	=	0x009a
                           000099   239 _TI	=	0x0099
                           000098   240 _RI	=	0x0098
                           000091   241 _T2EX	=	0x0091
                           000090   242 _T2	=	0x0090
                           0000CF   243 _TF2	=	0x00cf
                           0000CE   244 _EXF2	=	0x00ce
                           0000CD   245 _RCLK	=	0x00cd
                           0000CC   246 _TCLK	=	0x00cc
                           0000CB   247 _EXEN2	=	0x00cb
                           0000CA   248 _TR2	=	0x00ca
                           0000C9   249 _C_T2	=	0x00c9
                           0000C8   250 _CP_RL2	=	0x00c8
                                    251 ;--------------------------------------------------------
                                    252 ; overlayable register banks
                                    253 ;--------------------------------------------------------
                                    254 	.area REG_BANK_0	(REL,OVR,DATA)
      000000                        255 	.ds 8
                                    256 ;--------------------------------------------------------
                                    257 ; internal ram data
                                    258 ;--------------------------------------------------------
                                    259 	.area DSEG    (DATA)
      000000                        260 _settingScreen_blankspaceText_65537_20:
      000000                        261 	.ds 4
                                    262 ;--------------------------------------------------------
                                    263 ; overlayable items in internal ram
                                    264 ;--------------------------------------------------------
                                    265 ;--------------------------------------------------------
                                    266 ; indirectly addressable internal ram data
                                    267 ;--------------------------------------------------------
                                    268 	.area ISEG    (DATA)
                                    269 ;--------------------------------------------------------
                                    270 ; absolute internal ram data
                                    271 ;--------------------------------------------------------
                                    272 	.area IABS    (ABS,DATA)
                                    273 	.area IABS    (ABS,DATA)
                                    274 ;--------------------------------------------------------
                                    275 ; bit data
                                    276 ;--------------------------------------------------------
                                    277 	.area BSEG    (BIT)
      000000                        278 _settingScreen_currentCursor_65537_20:
      000000                        279 	.ds 1
      000001                        280 _settingScreen_prevCursor_65537_20:
      000001                        281 	.ds 1
      000002                        282 _settingScreen_splashState_65537_20:
      000002                        283 	.ds 1
      000003                        284 _settingScreen_sloc0_1_0:
      000003                        285 	.ds 1
                                    286 ;--------------------------------------------------------
                                    287 ; paged external ram data
                                    288 ;--------------------------------------------------------
                                    289 	.area PSEG    (PAG,XDATA)
                                    290 ;--------------------------------------------------------
                                    291 ; external ram data
                                    292 ;--------------------------------------------------------
                                    293 	.area XSEG    (XDATA)
                                    294 ;--------------------------------------------------------
                                    295 ; absolute external ram data
                                    296 ;--------------------------------------------------------
                                    297 	.area XABS    (ABS,XDATA)
                                    298 ;--------------------------------------------------------
                                    299 ; external initialized ram data
                                    300 ;--------------------------------------------------------
                                    301 	.area XISEG   (XDATA)
                                    302 	.area HOME    (CODE)
                                    303 	.area GSINIT0 (CODE)
                                    304 	.area GSINIT1 (CODE)
                                    305 	.area GSINIT2 (CODE)
                                    306 	.area GSINIT3 (CODE)
                                    307 	.area GSINIT4 (CODE)
                                    308 	.area GSINIT5 (CODE)
                                    309 	.area GSINIT  (CODE)
                                    310 	.area GSFINAL (CODE)
                                    311 	.area CSEG    (CODE)
                                    312 ;--------------------------------------------------------
                                    313 ; global & static initialisations
                                    314 ;--------------------------------------------------------
                                    315 	.area HOME    (CODE)
                                    316 	.area GSINIT  (CODE)
                                    317 	.area GSFINAL (CODE)
                                    318 	.area GSINIT  (CODE)
                                    319 ;--------------------------------------------------------
                                    320 ; Home
                                    321 ;--------------------------------------------------------
                                    322 	.area HOME    (CODE)
                                    323 	.area HOME    (CODE)
                                    324 ;--------------------------------------------------------
                                    325 ; code
                                    326 ;--------------------------------------------------------
                                    327 	.area CSEG    (CODE)
                                    328 ;------------------------------------------------------------
                                    329 ;Allocation info for local variables in function 'settingScreen'
                                    330 ;------------------------------------------------------------
                                    331 ;blankspaceText            Allocated with name '_settingScreen_blankspaceText_65537_20'
                                    332 ;------------------------------------------------------------
                                    333 ;	.\src\screen\settingScreen.c:24: void settingScreen() {
                                    334 ;	-----------------------------------------
                                    335 ;	 function settingScreen
                                    336 ;	-----------------------------------------
      000000                        337 _settingScreen:
                           000007   338 	ar7 = 0x07
                           000006   339 	ar6 = 0x06
                           000005   340 	ar5 = 0x05
                           000004   341 	ar4 = 0x04
                           000003   342 	ar3 = 0x03
                           000002   343 	ar2 = 0x02
                           000001   344 	ar1 = 0x01
                           000000   345 	ar0 = 0x00
                                    346 ;	.\src\screen\settingScreen.c:25: while (!SETTING_BUTTON);    // 等待按键释放
      000000                        347 00101$:
      000000 30 B7 FD         [24]  348 	jnb	_P37,00101$
                                    349 ;	.\src\screen\settingScreen.c:26: alartScreen("Setting...", 300);
      000003 75*00 2C         [24]  350 	mov	_alartScreen_PARM_2,#0x2c
      000006 75*01 01         [24]  351 	mov	(_alartScreen_PARM_2 + 1),#0x01
      000009 90r00r00         [24]  352 	mov	dptr,#___str_1
      00000C 75 F0 80         [24]  353 	mov	b,#0x80
      00000F 12r00r00         [24]  354 	lcall	_alartScreen
                                    355 ;	.\src\screen\settingScreen.c:28: bit currentCursor=0, prevCursor=0;    // 当前/上一个光标位置，0表示控制最高温度，1表示控制最低温度
                                    356 ;	assignBit
      000012 C2*00            [12]  357 	clr	_settingScreen_currentCursor_65537_20
                                    358 ;	assignBit
      000014 C2*01            [12]  359 	clr	_settingScreen_prevCursor_65537_20
                                    360 ;	.\src\screen\settingScreen.c:29: bit splashState=0;  // 闪烁光标状态，0表示显示温度，1表示显示空格
                                    361 ;	assignBit
      000016 C2*02            [12]  362 	clr	_settingScreen_splashState_65537_20
                                    363 ;	.\src\screen\settingScreen.c:30: unsigned char blankspaceText[] = "   ";    // 空格
      000018 75*00 20         [24]  364 	mov	_settingScreen_blankspaceText_65537_20,#0x20
      00001B 75*01 20         [24]  365 	mov	(_settingScreen_blankspaceText_65537_20 + 0x0001),#0x20
      00001E 75*02 20         [24]  366 	mov	(_settingScreen_blankspaceText_65537_20 + 0x0002),#0x20
      000021 75*03 00         [24]  367 	mov	(_settingScreen_blankspaceText_65537_20 + 0x0003),#0x00
                                    368 ;	.\src\screen\settingScreen.c:33: while (APPLY_BUTTON) {
      000024                        369 00142$:
      000024 20 B4 03         [24]  370 	jb	_P34,00240$
      000027 02r01rAF         [24]  371 	ljmp	00144$
      00002A                        372 00240$:
                                    373 ;	.\src\screen\settingScreen.c:36: if (currentCursor != prevCursor) {
      00002A A2*00            [12]  374 	mov	c,_settingScreen_currentCursor_65537_20
      00002C 20*01 01         [24]  375 	jb	_settingScreen_prevCursor_65537_20,00241$
      00002F B3               [12]  376 	cpl	c
      000030                        377 00241$:
      000030 40 16            [24]  378 	jc	00105$
                                    379 ;	.\src\screen\settingScreen.c:37: putStringOnLCD1602(0, 0, firstLine);
      000032 75*00r00         [24]  380 	mov	_putStringOnLCD1602_PARM_3,#_firstLine
      000035 75*01s00         [24]  381 	mov	(_putStringOnLCD1602_PARM_3 + 1),#(_firstLine >> 8)
      000038 75*02 00         [24]  382 	mov	(_putStringOnLCD1602_PARM_3 + 2),#0x00
      00003B 75*00 00         [24]  383 	mov	_putStringOnLCD1602_PARM_2,#0x00
      00003E 75 82 00         [24]  384 	mov	dpl,#0x00
      000041 12r00r00         [24]  385 	lcall	_putStringOnLCD1602
                                    386 ;	.\src\screen\settingScreen.c:38: prevCursor = currentCursor;
                                    387 ;	assignBit
      000044 A2*00            [12]  388 	mov	c,_settingScreen_currentCursor_65537_20
      000046 92*01            [24]  389 	mov	_settingScreen_prevCursor_65537_20,c
      000048                        390 00105$:
                                    391 ;	.\src\screen\settingScreen.c:42: if (!SETTING_BUTTON) {
      000048 20 B7 05         [24]  392 	jb	_P37,00110$
                                    393 ;	.\src\screen\settingScreen.c:43: while (!SETTING_BUTTON);    // 等待按键释放
      00004B                        394 00106$:
      00004B 30 B7 FD         [24]  395 	jnb	_P37,00106$
                                    396 ;	.\src\screen\settingScreen.c:44: currentCursor = !currentCursor;
      00004E B2*00            [12]  397 	cpl	_settingScreen_currentCursor_65537_20
      000050                        398 00110$:
                                    399 ;	.\src\screen\settingScreen.c:48: if (!currentCursor) {   // 控制最高温度
      000050 30*00 03         [24]  400 	jnb	_settingScreen_currentCursor_65537_20,00245$
      000053 02r01r03         [24]  401 	ljmp	00140$
      000056                        402 00245$:
                                    403 ;	.\src\screen\settingScreen.c:50: splashState--?putStringOnLCD1602(0, 2, blankspaceText):putStringOnLCD1602(0, 0, firstLine);
                                    404 ;	assignBit
      000056 A2*02            [12]  405 	mov	c,_settingScreen_splashState_65537_20
      000058 92*03            [24]  406 	mov	_settingScreen_sloc0_1_0,c
      00005A A2*02            [12]  407 	mov	c,_settingScreen_splashState_65537_20
      00005C E4               [12]  408 	clr	a
      00005D 33               [12]  409 	rlc	a
      00005E 14               [12]  410 	dec	a
      00005F 24 FF            [12]  411 	add	a,#0xff
      000061 92*02            [24]  412 	mov	_settingScreen_splashState_65537_20,c
      000063 30*03 14         [24]  413 	jnb	_settingScreen_sloc0_1_0,00147$
      000066 75*00r00         [24]  414 	mov	_putStringOnLCD1602_PARM_3,#_settingScreen_blankspaceText_65537_20
      000069 75*01 00         [24]  415 	mov	(_putStringOnLCD1602_PARM_3 + 1),#0x00
      00006C 75*02 40         [24]  416 	mov	(_putStringOnLCD1602_PARM_3 + 2),#0x40
      00006F 75*00 02         [24]  417 	mov	_putStringOnLCD1602_PARM_2,#0x02
      000072 75 82 00         [24]  418 	mov	dpl,#0x00
      000075 12r00r00         [24]  419 	lcall	_putStringOnLCD1602
      000078 80 12            [24]  420 	sjmp	00148$
      00007A                        421 00147$:
      00007A 75*00r00         [24]  422 	mov	_putStringOnLCD1602_PARM_3,#_firstLine
      00007D 75*01s00         [24]  423 	mov	(_putStringOnLCD1602_PARM_3 + 1),#(_firstLine >> 8)
      000080 75*02 00         [24]  424 	mov	(_putStringOnLCD1602_PARM_3 + 2),#0x00
      000083 75*00 00         [24]  425 	mov	_putStringOnLCD1602_PARM_2,#0x00
      000086 75 82 00         [24]  426 	mov	dpl,#0x00
      000089 12r00r00         [24]  427 	lcall	_putStringOnLCD1602
      00008C                        428 00148$:
                                    429 ;	.\src\screen\settingScreen.c:51: if (!ADD_BUTTON) {  // 如果按下ADD_BUTTON则增加最高温度（不超过128摄氏度）
      00008C 20 B6 34         [24]  430 	jb	_P36,00117$
                                    431 ;	.\src\screen\settingScreen.c:52: while (!ADD_BUTTON);    // 等待按键释放
      00008F                        432 00111$:
      00008F 30 B6 FD         [24]  433 	jnb	_P36,00111$
                                    434 ;	.\src\screen\settingScreen.c:53: highestTemperature ++;
      000092 05*00            [12]  435 	inc	_highestTemperature
      000094 E4               [12]  436 	clr	a
      000095 B5*00 02         [24]  437 	cjne	a,_highestTemperature,00249$
      000098 05*01            [12]  438 	inc	(_highestTemperature + 1)
      00009A                        439 00249$:
                                    440 ;	.\src\screen\settingScreen.c:54: if (highestTemperature > 128) highestTemperature = 128;
      00009A C3               [12]  441 	clr	c
      00009B 74 80            [12]  442 	mov	a,#0x80
      00009D 95*00            [12]  443 	subb	a,_highestTemperature
      00009F 74 80            [12]  444 	mov	a,#(0x00 ^ 0x80)
      0000A1 85*01 F0         [24]  445 	mov	b,(_highestTemperature + 1)
      0000A4 63 F0 80         [24]  446 	xrl	b,#0x80
      0000A7 95 F0            [12]  447 	subb	a,b
      0000A9 50 06            [24]  448 	jnc	00115$
      0000AB 75*00 80         [24]  449 	mov	_highestTemperature,#0x80
      0000AE 75*01 00         [24]  450 	mov	(_highestTemperature + 1),#0x00
      0000B1                        451 00115$:
                                    452 ;	.\src\screen\settingScreen.c:56: floatToText(highestTemperature, onScreenHighestTemperature);
      0000B1 85*00*00         [24]  453 	mov	_floatToText_PARM_2,_onScreenHighestTemperature
      0000B4 85*01*01         [24]  454 	mov	(_floatToText_PARM_2 + 1),(_onScreenHighestTemperature + 1)
      0000B7 75*02 00         [24]  455 	mov	(_floatToText_PARM_2 + 2),#0x00
      0000BA 85*00 82         [24]  456 	mov	dpl,_highestTemperature
      0000BD 85*01 83         [24]  457 	mov	dph,(_highestTemperature + 1)
      0000C0 12r00r00         [24]  458 	lcall	_floatToText
      0000C3                        459 00117$:
                                    460 ;	.\src\screen\settingScreen.c:58: if (!SUB_BUTTON) {  // 如果按下SUB_BUTTON则减少最高温度（不低于最低温度）
      0000C3 30 B5 03         [24]  461 	jnb	_P35,00251$
      0000C6 02r01rA6         [24]  462 	ljmp	00141$
      0000C9                        463 00251$:
                                    464 ;	.\src\screen\settingScreen.c:59: while (!SUB_BUTTON);    // 等待按键释放
      0000C9                        465 00118$:
      0000C9 30 B5 FD         [24]  466 	jnb	_P35,00118$
                                    467 ;	.\src\screen\settingScreen.c:60: highestTemperature --;
      0000CC 15*00            [12]  468 	dec	_highestTemperature
      0000CE 74 FF            [12]  469 	mov	a,#0xff
      0000D0 B5*00 02         [24]  470 	cjne	a,_highestTemperature,00253$
      0000D3 15*01            [12]  471 	dec	(_highestTemperature + 1)
      0000D5                        472 00253$:
                                    473 ;	.\src\screen\settingScreen.c:61: if (highestTemperature < lowestTemperature) highestTemperature = lowestTemperature;
      0000D5 C3               [12]  474 	clr	c
      0000D6 E5*00            [12]  475 	mov	a,_highestTemperature
      0000D8 95*00            [12]  476 	subb	a,_lowestTemperature
      0000DA E5*01            [12]  477 	mov	a,(_highestTemperature + 1)
      0000DC 64 80            [12]  478 	xrl	a,#0x80
      0000DE 85*01 F0         [24]  479 	mov	b,(_lowestTemperature + 1)
      0000E1 63 F0 80         [24]  480 	xrl	b,#0x80
      0000E4 95 F0            [12]  481 	subb	a,b
      0000E6 50 06            [24]  482 	jnc	00122$
      0000E8 85*00*00         [24]  483 	mov	_highestTemperature,_lowestTemperature
      0000EB 85*01*01         [24]  484 	mov	(_highestTemperature + 1),(_lowestTemperature + 1)
      0000EE                        485 00122$:
                                    486 ;	.\src\screen\settingScreen.c:63: floatToText(highestTemperature, onScreenHighestTemperature);
      0000EE 85*00*00         [24]  487 	mov	_floatToText_PARM_2,_onScreenHighestTemperature
      0000F1 85*01*01         [24]  488 	mov	(_floatToText_PARM_2 + 1),(_onScreenHighestTemperature + 1)
      0000F4 75*02 00         [24]  489 	mov	(_floatToText_PARM_2 + 2),#0x00
      0000F7 85*00 82         [24]  490 	mov	dpl,_highestTemperature
      0000FA 85*01 83         [24]  491 	mov	dph,(_highestTemperature + 1)
      0000FD 12r00r00         [24]  492 	lcall	_floatToText
      000100 02r01rA6         [24]  493 	ljmp	00141$
      000103                        494 00140$:
                                    495 ;	.\src\screen\settingScreen.c:67: splashState--?putStringOnLCD1602(0, 11, blankspaceText):putStringOnLCD1602(0, 0, firstLine);
                                    496 ;	assignBit
      000103 A2*02            [12]  497 	mov	c,_settingScreen_splashState_65537_20
      000105 92*03            [24]  498 	mov	_settingScreen_sloc0_1_0,c
      000107 A2*02            [12]  499 	mov	c,_settingScreen_splashState_65537_20
      000109 E4               [12]  500 	clr	a
      00010A 33               [12]  501 	rlc	a
      00010B 14               [12]  502 	dec	a
      00010C 24 FF            [12]  503 	add	a,#0xff
      00010E 92*02            [24]  504 	mov	_settingScreen_splashState_65537_20,c
      000110 30*03 14         [24]  505 	jnb	_settingScreen_sloc0_1_0,00149$
      000113 75*00r00         [24]  506 	mov	_putStringOnLCD1602_PARM_3,#_settingScreen_blankspaceText_65537_20
      000116 75*01 00         [24]  507 	mov	(_putStringOnLCD1602_PARM_3 + 1),#0x00
      000119 75*02 40         [24]  508 	mov	(_putStringOnLCD1602_PARM_3 + 2),#0x40
      00011C 75*00 0B         [24]  509 	mov	_putStringOnLCD1602_PARM_2,#0x0b
      00011F 75 82 00         [24]  510 	mov	dpl,#0x00
      000122 12r00r00         [24]  511 	lcall	_putStringOnLCD1602
      000125 80 12            [24]  512 	sjmp	00150$
      000127                        513 00149$:
      000127 75*00r00         [24]  514 	mov	_putStringOnLCD1602_PARM_3,#_firstLine
      00012A 75*01s00         [24]  515 	mov	(_putStringOnLCD1602_PARM_3 + 1),#(_firstLine >> 8)
      00012D 75*02 00         [24]  516 	mov	(_putStringOnLCD1602_PARM_3 + 2),#0x00
      000130 75*00 00         [24]  517 	mov	_putStringOnLCD1602_PARM_2,#0x00
      000133 75 82 00         [24]  518 	mov	dpl,#0x00
      000136 12r00r00         [24]  519 	lcall	_putStringOnLCD1602
      000139                        520 00150$:
                                    521 ;	.\src\screen\settingScreen.c:68: if (!ADD_BUTTON) {  // 如果按下ADD_BUTTON则增加最低温度（不高于最高温度）
      000139 20 B6 36         [24]  522 	jb	_P36,00131$
                                    523 ;	.\src\screen\settingScreen.c:69: while (!ADD_BUTTON);    // 等待按键释放
      00013C                        524 00125$:
      00013C 30 B6 FD         [24]  525 	jnb	_P36,00125$
                                    526 ;	.\src\screen\settingScreen.c:70: lowestTemperature ++;
      00013F 05*00            [12]  527 	inc	_lowestTemperature
      000141 E4               [12]  528 	clr	a
      000142 B5*00 02         [24]  529 	cjne	a,_lowestTemperature,00258$
      000145 05*01            [12]  530 	inc	(_lowestTemperature + 1)
      000147                        531 00258$:
                                    532 ;	.\src\screen\settingScreen.c:71: if (lowestTemperature > highestTemperature) lowestTemperature = highestTemperature;
      000147 C3               [12]  533 	clr	c
      000148 E5*00            [12]  534 	mov	a,_highestTemperature
      00014A 95*00            [12]  535 	subb	a,_lowestTemperature
      00014C E5*01            [12]  536 	mov	a,(_highestTemperature + 1)
      00014E 64 80            [12]  537 	xrl	a,#0x80
      000150 85*01 F0         [24]  538 	mov	b,(_lowestTemperature + 1)
      000153 63 F0 80         [24]  539 	xrl	b,#0x80
      000156 95 F0            [12]  540 	subb	a,b
      000158 50 06            [24]  541 	jnc	00129$
      00015A 85*00*00         [24]  542 	mov	_lowestTemperature,_highestTemperature
      00015D 85*01*01         [24]  543 	mov	(_lowestTemperature + 1),(_highestTemperature + 1)
      000160                        544 00129$:
                                    545 ;	.\src\screen\settingScreen.c:73: floatToText(lowestTemperature, onScreenLowestTemperature);
      000160 85*00*00         [24]  546 	mov	_floatToText_PARM_2,_onScreenLowestTemperature
      000163 85*01*01         [24]  547 	mov	(_floatToText_PARM_2 + 1),(_onScreenLowestTemperature + 1)
      000166 75*02 00         [24]  548 	mov	(_floatToText_PARM_2 + 2),#0x00
      000169 85*00 82         [24]  549 	mov	dpl,_lowestTemperature
      00016C 85*01 83         [24]  550 	mov	dph,(_lowestTemperature + 1)
      00016F 12r00r00         [24]  551 	lcall	_floatToText
      000172                        552 00131$:
                                    553 ;	.\src\screen\settingScreen.c:75: if (!SUB_BUTTON) {  // 如果按下SUB_BUTTON则减少最低温度（不低于-55摄氏度）
      000172 20 B5 31         [24]  554 	jb	_P35,00141$
                                    555 ;	.\src\screen\settingScreen.c:76: while (!SUB_BUTTON);    // 等待按键释放
      000175                        556 00132$:
      000175 30 B5 FD         [24]  557 	jnb	_P35,00132$
                                    558 ;	.\src\screen\settingScreen.c:77: lowestTemperature --;
      000178 15*00            [12]  559 	dec	_lowestTemperature
      00017A 74 FF            [12]  560 	mov	a,#0xff
      00017C B5*00 02         [24]  561 	cjne	a,_lowestTemperature,00262$
      00017F 15*01            [12]  562 	dec	(_lowestTemperature + 1)
      000181                        563 00262$:
                                    564 ;	.\src\screen\settingScreen.c:78: if (lowestTemperature < -55) lowestTemperature = -55;
      000181 C3               [12]  565 	clr	c
      000182 E5*00            [12]  566 	mov	a,_lowestTemperature
      000184 94 C9            [12]  567 	subb	a,#0xc9
      000186 E5*01            [12]  568 	mov	a,(_lowestTemperature + 1)
      000188 64 80            [12]  569 	xrl	a,#0x80
      00018A 94 7F            [12]  570 	subb	a,#0x7f
      00018C 50 06            [24]  571 	jnc	00136$
      00018E 75*00 C9         [24]  572 	mov	_lowestTemperature,#0xc9
      000191 75*01 FF         [24]  573 	mov	(_lowestTemperature + 1),#0xff
      000194                        574 00136$:
                                    575 ;	.\src\screen\settingScreen.c:80: floatToText(lowestTemperature, onScreenLowestTemperature);
      000194 85*00*00         [24]  576 	mov	_floatToText_PARM_2,_onScreenLowestTemperature
      000197 85*01*01         [24]  577 	mov	(_floatToText_PARM_2 + 1),(_onScreenLowestTemperature + 1)
      00019A 75*02 00         [24]  578 	mov	(_floatToText_PARM_2 + 2),#0x00
      00019D 85*00 82         [24]  579 	mov	dpl,_lowestTemperature
      0001A0 85*01 83         [24]  580 	mov	dph,(_lowestTemperature + 1)
      0001A3 12r00r00         [24]  581 	lcall	_floatToText
      0001A6                        582 00141$:
                                    583 ;	.\src\screen\settingScreen.c:83: delayOneMillisecond(300);
      0001A6 90 01 2C         [24]  584 	mov	dptr,#0x012c
      0001A9 12r00r00         [24]  585 	lcall	_delayOneMillisecond
      0001AC 02r00r24         [24]  586 	ljmp	00142$
      0001AF                        587 00144$:
                                    588 ;	.\src\screen\settingScreen.c:87: alartScreen("Writing...", 300);
      0001AF 75*00 2C         [24]  589 	mov	_alartScreen_PARM_2,#0x2c
      0001B2 75*01 01         [24]  590 	mov	(_alartScreen_PARM_2 + 1),#0x01
      0001B5 90r00r0B         [24]  591 	mov	dptr,#___str_2
      0001B8 75 F0 80         [24]  592 	mov	b,#0x80
      0001BB 12r00r00         [24]  593 	lcall	_alartScreen
                                    594 ;	.\src\screen\settingScreen.c:88: writeAT24C02(0x00, (unsigned char)(highestTemperature));
      0001BE 85*00*00         [24]  595 	mov	_writeAT24C02_PARM_2,_highestTemperature
      0001C1 75 82 00         [24]  596 	mov	dpl,#0x00
      0001C4 12r00r00         [24]  597 	lcall	_writeAT24C02
                                    598 ;	.\src\screen\settingScreen.c:89: writeAT24C02(0x01, (unsigned char)(lowestTemperature));
      0001C7 85*00*00         [24]  599 	mov	_writeAT24C02_PARM_2,_lowestTemperature
      0001CA 75 82 01         [24]  600 	mov	dpl,#0x01
                                    601 ;	.\src\screen\settingScreen.c:90: }
      0001CD 02r00r00         [24]  602 	ljmp	_writeAT24C02
                                    603 	.area CSEG    (CODE)
                                    604 	.area CONST   (CODE)
                                    605 	.area CONST   (CODE)
      000000                        606 ___str_1:
      000000 53 65 74 74 69 6E 67   607 	.ascii "Setting..."
             2E 2E 2E
      00000A 00                     608 	.db 0x00
                                    609 	.area CSEG    (CODE)
                                    610 	.area CONST   (CODE)
      00000B                        611 ___str_2:
      00000B 57 72 69 74 69 6E 67   612 	.ascii "Writing..."
             2E 2E 2E
      000015 00                     613 	.db 0x00
                                    614 	.area CSEG    (CODE)
                                    615 	.area XINIT   (CODE)
                                    616 	.area CABS    (ABS,CODE)
