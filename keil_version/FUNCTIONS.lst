C51 COMPILER V9.01   FUNCTIONS                                                             12/05/2023 20:14:37 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE FUNCTIONS
OBJECT MODULE PLACED IN FUNCTIONS.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE src\utils\FUNCTIONS.c ROM(COMPACT) BROWSE DEBUG OBJECTEXTEND 
                    -PRINT(.\FUNCTIONS.lst) OBJECT(FUNCTIONS.obj)

line level    source

   1          #include "reg52.h"
   2          
   3          sbit BEEP = P1^4;
   4          sbit LED = P2^0;
   5          sbit FAN = P2^7;
   6          
   7          extern void initializeFan();
   8          extern void initializeLCD1602();
   9          extern void initializeDS18B20();
  10          
  11          // 读取温度值, 转换为字符串, 并赋值给全局变量
  12          // (unsigned char) temperature: 读取的温度值
  13          // (unsigned char *) buf: 需要显示温度的字符串指针(占用 3 个字节)
  14          // (float *) globalVariable: 需要赋值的全局变量指针
  15          void prepareReadTemperature(unsigned char temperature, unsigned char *buf, int *globalVariable) {
  16   1          // 处理存储的温度
  17   1          if (temperature >= 129) {
  18   2              // 负数
  19   2              temperature = 255 - temperature + 1;
  20   2              buf[0] = '-';    // 负号
  21   2              buf[1] = (unsigned char)(temperature % 100 / 10 + '0');
  22   2              buf[2] = (unsigned char)(temperature % 10 + '0');
  23   2              // 转为数字赋值给全局变量
  24   2              *globalVariable = (int)(-1 * ((int)(buf[1] - '0') * 10 + (int)(buf[2] - '0')));
  25   2          } else {
  26   2              // 正数
  27   2              // 取第一位数字，如果不是0则显示，否则显示空格
  28   2              buf[0] = (unsigned char)(temperature / 100 + '0');
  29   2              buf[1] = (unsigned char)(temperature % 100 / 10 + '0');   
  30   2              buf[2] = (unsigned char)(temperature % 10 + '0'); 
  31   2              // 转为数字赋值给全局变量
  32   2              *globalVariable = (int)((int)(buf[0] - '0') * 100 + (int)(buf[1] - '0') * 10 + (int)(buf[2] - '0')
             -);
  33   2          }
  34   1          // 如果第一位数字是0，则将第一位数字替换为空格
  35   1          if (buf[0] == '0') buf[0] = ' ';
  36   1          // 如果第二位数字是0，且第一位数字是空格或负号，则将第二位数字替换为第一位数字
  37   1          if (buf[1] == '0' && (buf[0] == ' '||buf[0] == '-')) {
  38   2              buf[1] = buf[0];
  39   2              buf[0] = ' ';
  40   2          }
  41   1      }
  42          
  43          // 将最高/最低温度转换为字符串并修改对应屏幕显示内容
  44          void floatToText(int num, unsigned char *buf) {
  45   1          // 如果温度是负数
  46   1          if (num < 0) {
  47   2              buf[0] = '-';
  48   2              buf[1] = (unsigned char)(-1 * (int)(num / 10) + '0');
  49   2              buf[2] = (unsigned char)(-1 * (int)(num % 10) + '0');
  50   2          } else {
  51   2              buf[0] = (unsigned char)(num / 100 + '0');
  52   2              buf[1] = (unsigned char)(num % 100 / 10 + '0');
  53   2              buf[2] = (unsigned char)(num % 10 + '0');
C51 COMPILER V9.01   FUNCTIONS                                                             12/05/2023 20:14:37 PAGE 2   

  54   2          }
  55   1          // 如果第一位数字是0，则将第一位数字替换为空格
  56   1          if (buf[0] == '0') buf[0] = ' ';
  57   1          // 如果第二位数字是0，且第一位数字是空格或负号，则将第二位数字替换为第一位数字
  58   1          if (buf[1] == '0' && (buf[0] == ' '||buf[0] == '-')) {
  59   2              buf[1] = buf[0];
  60   2              buf[0] = ' ';
  61   2          }
  62   1      }
  63          
  64          void initializeEverything() {
  65   1          // 默认关闭
  66   1          BEEP=1;
  67   1          FAN=0;
  68   1          LED=1;
  69   1      
  70   1          initializeFan();    // 初始化风扇
  71   1          initializeLCD1602();    // 初始化LCD1602
  72   1          initializeDS18B20();    // 初始化DS18B20，返回1表示初始化成功，返回0表示初始化失败，这里不做处理
  73   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    546    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
