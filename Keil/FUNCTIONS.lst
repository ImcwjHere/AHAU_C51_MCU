C51 COMPILER V9.01   FUNCTIONS                                                             12/06/2023 12:06:33 PAGE 1   


C51 COMPILER V9.01, COMPILATION OF MODULE FUNCTIONS
OBJECT MODULE PLACED IN .\FUNCTIONS.obj
COMPILER INVOKED BY: D:\Program Files\Keil\C51\BIN\C51.EXE ..\eide\src\utils\FUNCTIONS.c BROWSE DEBUG OBJECTEXTEND PRINT
                    -(.\FUNCTIONS.lst) OBJECT(.\FUNCTIONS.obj)

line level    source

   1          #include "FUNCTIONS.h"
   2          
   3          // 读取温度值, 转换为字符串, 并赋值给全局变量
   4          // (unsigned char) temperature: 读取的温度值
   5          // (unsigned char *) buf: 需要显示温度的字符串指针(占用 3 个字节)
   6          // (float *) globalVariable: 需要赋值的全局变量指针
   7          void prepareReadTemperature(unsigned char temperature, unsigned char *buf, int *globalVariable) {
   8   1          // 处理存储的温度
   9   1          if (temperature >= 129) {
  10   2              // 负数
  11   2              temperature = 255 - temperature + 1;
  12   2              buf[0] = '-';    // 负号
  13   2              buf[1] = (unsigned char)(temperature % 100 / 10 + '0');
  14   2              buf[2] = (unsigned char)(temperature % 10 + '0');
  15   2              // 转为数字赋值给全局变量
  16   2              *globalVariable = (int)(-1 * ((int)(buf[1] - '0') * 10 + (int)(buf[2] - '0')));
  17   2          } else {
  18   2              // 正数
  19   2              // 取第一位数字，如果不是0则显示，否则显示空格
  20   2              buf[0] = (unsigned char)(temperature / 100 + '0');
  21   2              buf[1] = (unsigned char)(temperature % 100 / 10 + '0');   
  22   2              buf[2] = (unsigned char)(temperature % 10 + '0'); 
  23   2              // 转为数字赋值给全局变量
  24   2              *globalVariable = (int)((int)(buf[0] - '0') * 100 + (int)(buf[1] - '0') * 10 + (int)(buf[2] - '0')
             -);
  25   2          }
  26   1          // 如果第一位数字是0，则将第一位数字替换为空格
  27   1          if (buf[0] == '0') buf[0] = ' ';
  28   1          // 如果第二位数字是0，且第一位数字是空格或负号，则将第二位数字替换为第一位数字
  29   1          if (buf[1] == '0' && (buf[0] == ' '||buf[0] == '-')) {
  30   2              buf[1] = buf[0];
  31   2              buf[0] = ' ';
  32   2          }
  33   1      }
  34          
  35          // 将最高/最低温度转换为字符串并修改对应屏幕显示内容
  36          void floatToText(int num, unsigned char *buf) {
  37   1          // 如果温度是负数
  38   1          if (num < 0) {
  39   2              buf[0] = '-';
  40   2              buf[1] = (unsigned char)(-1 * (int)(num / 10) + '0');
  41   2              buf[2] = (unsigned char)(-1 * (int)(num % 10) + '0');
  42   2          } else {
  43   2              buf[0] = (unsigned char)(num / 100 + '0');
  44   2              buf[1] = (unsigned char)(num % 100 / 10 + '0');
  45   2              buf[2] = (unsigned char)(num % 10 + '0');
  46   2          }
  47   1          // 如果第一位数字是0，则将第一位数字替换为空格
  48   1          if (buf[0] == '0') buf[0] = ' ';
  49   1          // 如果第二位数字是0，且第一位数字是空格或负号，则将第二位数字替换为第一位数字
  50   1          if (buf[1] == '0' && (buf[0] == ' '||buf[0] == '-')) {
  51   2              buf[1] = buf[0];
  52   2              buf[0] = ' ';
  53   2          }
C51 COMPILER V9.01   FUNCTIONS                                                             12/06/2023 12:06:33 PAGE 2   

  54   1      }
  55          
  56          void initializeEverything() {
  57   1          // 默认关闭
  58   1          BEEP=1;
  59   1          FAN=0;
  60   1          LED=1;
  61   1      
  62   1          initializeFan();    // 初始化风扇
  63   1          initializeLCD1602();    // 初始化LCD1602
  64   1          initializeDS18B20();    // 初始化DS18B20，返回1表示初始化成功，返回0表示初始化失败，这里不做处理
  65   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    547    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      12
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
